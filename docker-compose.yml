services:
  engine:
    build:
      context: engine
    ports:
      - '8080:8080'
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      APP_NAME: ${APP_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      FLYWAY_ENABLED: true
    volumes:
      - ./engine/build/libs:/app/libs
    command: java -Djava.library.path=/app/native-libs -jar /app/libs/engine-0.0.1-SNAPSHOT.jar
  frontend:
    build:
      context: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/src
    environment:
      NODE_ENV: development
    stdin_open: true
    tty: true
    command: npm run dev
  postgres:
    image: 'postgres:17.2-alpine'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
  redis:
    image: "redislabs/redismod"
    ports:
      - "6379:6379"
    volumes:
      - ./data:/data
    entrypoint: >
      redis-server
        --loadmodule /usr/lib/redis/modules/redisai.so
          ONNX redisai_onnxruntime/redisai_onnxruntime.so
          TF redisai_tensorflow/redisai_tensorflow.so
          TFLITE redisai_tflite/redisai_tflite.so
          TORCH redisai_torch/redisai_torch.so   
        --loadmodule /usr/lib/redis/modules/redisearch.so
        --loadmodule /usr/lib/redis/modules/redisgraph.so
        --loadmodule /usr/lib/redis/modules/redistimeseries.so
        --loadmodule /usr/lib/redis/modules/rejson.so
        --loadmodule /usr/lib/redis/modules/redisbloom.so
        --loadmodule /usr/lib/redis/modules/redisgears.so
        --appendonly yes
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  postgres_data:
include:
  - ./engine/monitoring/docker-compose.monitoring.yml